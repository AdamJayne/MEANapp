{"version":3,"sources":["app.js","auth/signin.js","auth/signup.js","navLinks/userlinks.js","home/home.js","profile/profile.js","usermap/usermap.js","authinterceptor.js","currentuser.js","profilepage.service.js","sessiontoken.js","usermap.service.js","users.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function(){\r\n\tvar app = angular.module('profconn', [\r\n\t\t'ui.router',\r\n\t\t'profconn.home',\r\n\t\t'profconn.auth.signup',\r\n\t\t'profconn.auth.signin',\r\n\t\t'profconn.profile',\r\n\t\t'profconn.usermap'\r\n\t]);\r\n\tfunction config($urlRouterProvider){\r\n\t\t$urlRouterProvider.otherwise('/home');\r\n\t}\r\n\tconfig.$inject = ['$urlRouterProvider']\r\n\tapp.config(config);\r\n\tapp.constant('API_BASE', '//localhost:3000/');\r\n})();","(function(){\r\n\tangular\r\n\t\t.module('profconn.auth.signin', ['ui.router'])\r\n\t\t.config(signinConfig);\r\n\t\tfunction signinConfig($stateProvider){\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('signin', {\r\n\t\t\t\t\turl: '/signin',\r\n\t\t\t\t\ttemplateUrl: '/components/auth/signin.html',\r\n\t\t\t\t\tcontroller: SignInController,\r\n\t\t\t\t\tcontrollerAs: 'ctrl',\r\n\t\t\t\t\tbindToController: this\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tsigninConfig.$inject = ['$stateProvider'];\r\n\r\n\t\tfunction SignInController($state, UsersService){\r\n\t\t\tvar vm = this;\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.submit = function(){\r\n\t\t\t\tUsersService.login(vm.user).then(function(response){\r\n\t\t\t\t\tconsole.log('signinworked');\r\n\t\t\t\t\t$state.go('usermap');\r\n\t\t\t\t}, function(err){\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tSignInController.$inject = ['$state', 'UsersService'];\r\n})();","(function(){\r\n\tangular\r\n\t\t.module('profconn.auth.signup', ['ui.router'])\r\n\t\t.config(signupConfig);\r\n\r\n\t\tfunction signupConfig($stateProvider){\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('signup', {\r\n\t\t\t\t\turl: '/signup',\r\n\t\t\t\t\ttemplateUrl: '/components/auth/signup.html',\r\n\t\t\t\t\tcontroller: SignUpController,\r\n\t\t\t\t\tcontrollerAs: 'ctrl',\r\n\t\t\t\t\tbindToController: this\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tsignupConfig.$inject = ['$stateProvider'];\r\n\r\n\t\tfunction SignUpController($state, UsersService){\r\n\t\t\tvar vm = this;\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.message = \"Sign up for an account!\"\r\n\t\t\tvm.submit = function(){\r\n\t\t\t\tUsersService.create(vm.user).then(function(response){\r\n\t\t\t\t\tconsole.log('Worked here');\r\n\t\t\t\t\t$state.go('usermap');\r\n\t\t\t\t},function(err) {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tSignUpController.$inject = ['$state', 'UsersService'];\r\n})();","(function(){\r\n\tangular.module('profconn')\r\n\t.directive('userlinks', \r\n\t\tfunction(){\r\n\t\t\tUserLinksController.$inject = ['$state', 'CurrentUser', 'SessionToken'];\r\n\t\t\tfunction UserLinksController($state, CurrentUser, SessionToken) {\r\n\t\t\t\tvar vm = this;\r\n\t\t\t\tvm.user = function(){\r\n\t\t\t\t\treturn CurrentUser.get();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvm.signedIn = function() {\r\n\t\t\t\t\t// if (vm.user() === {}){\r\n\t\t\t\t\t// \treturn false;\r\n\t\t\t\t\t// }else{\r\n\t\t\t\t\t// \treturn true;\r\n\t\t\t\t\t// }\r\n\t\t\t\t\treturn !!(vm.user());\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvm.logout = function() {\r\n\t\t\t\t\tCurrentUser.clear();\r\n\t\t\t\t\tSessionToken.clear();\r\n\t\t\t\t\t$state.go('home');\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tscope: {},\r\n\t\t\t\tcontroller: UserLinksController,\r\n\t\t\t\tcontrollerAs: 'ctrl',\r\n\t\t\t\tbindToController: true,\r\n\t\t\t\ttemplateUrl: '/components/navLinks/userlinks.html'\r\n\t\t\t};\r\n\t\t});\r\n})();","(function(){\r\n\tangular\r\n\t\t.module('profconn.home', ['ui.router'])\r\n\t\t.config(homeConfig);\r\n\r\n\t\tfunction homeConfig($stateProvider){\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('home', {\r\n\t\t\t\t\turl:'/home',\r\n\t\t\t\t\ttemplateUrl: '/components/home/home.html',\r\n\t\t\t\t\tcontroller: HomeController,\r\n\t\t\t\t\tcontrollerAs: 'ctrl',\r\n\t\t\t\t\tbindToController: this\r\n\t\t\t\t});\r\n\t\t}\r\n\t\thomeConfig.$inject = ['$stateProvider'];\r\n\t\tfunction HomeController($state){\r\n\t\t\tconsole.log('home');\r\n\t\t}\r\n\t\tHomeController.$inject = ['$state'];\r\n})();","(function(){\r\n\tangular\r\n\t\t.module('profconn.profile', ['ui.router'])\r\n\t\t.config(profileConfig);\r\n\r\n\t\tfunction profileConfig($stateProvider){\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('profile', {\r\n\t\t\t\t\turl: '/profile',\r\n\t\t\t\t\ttemplateUrl: '/components/profile/profile.html',\r\n\t\t\t\t\tcontroller: ProfileController,\r\n\t\t\t\t\tcontrollerAs: 'ctrl',\r\n\t\t\t\t\tbindToController: this\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tprofileConfig.$inject = ['$stateProvider'];\r\n\r\n\t\tfunction ProfileController($state, ProfileService, CurrentUser){\r\n\t\t\tvar vm = this;\r\n\t\t\tvm.user={};\r\n\t\t\tvm.message =\"Update your profile by filling in the fields.\"\r\n\t\t\tvm.submit = function(){\r\n\t\t\t\tconsole.log(vm.user)\r\n\t\t\t\tProfileService.update(vm.user).then(\r\n\t\t\t\t\tfunction(response){\r\n\t\t\t\t\t\tconsole.log('updated!');\r\n\t\t\t\t\t\t$state.go('profile', {}, {reload: \"profile\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tProfileService.fetch().then(function(data){\r\n\t\t\t\tvm.username= data.username\r\n\t\t\t\tvm.email= data.email\r\n\t\t\t\tvm.usertype= data.usertype\r\n\t\t\t\tvm.profession= data.profession\r\n\t\t\t\tvm.address= data.address\r\n\t\t\t\tvm.description=data.description\r\n\t\t\t\tvm.contact= data.contact\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tProfileController.$inject = ['$state', 'ProfileService', 'CurrentUser'];\r\n})();","(function(){\r\n\tangular\r\n\t\t.module('profconn.usermap', ['ui.router'])\r\n\t\t.config(userMapConfig);\r\n\t\tfunction userMapConfig($stateProvider){\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('usermap', {\r\n\t\t\t\t\turl: '/userMap',\r\n\t\t\t\t\ttemplateUrl: '/components/usermap/usermap.html',\r\n\t\t\t\t\tcontroller: UserMapController,\r\n\t\t\t\t\tcontrollerAs: 'ctrl',\r\n\t\t\t\t\tbindToController: this\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tuserMapConfig.$inject = ['$stateProvider'];\r\n\r\n\t\tfunction UserMapController($state, UsermapService){\r\n\t\t\tvar vm = this;\r\n\t\t\tUsermapService.fetchAll().then(\r\n\t\t\t\tfunction(response){\r\n\t\t\t\t\tvm.users = response;\r\n\t\t\t\t\treturn vm.users;\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tUserMapController.$inject = ['$state', 'UsermapService']\r\n})();","(function(){\r\n\tangular.module('profconn')\r\n\t\t.factory('AuthInterceptor', ['SessionToken', 'API_BASE',\r\n\t\t\tfunction(SessionToken, API_BASE){\r\n\t\t\t\treturn {\r\n\t\t\t\t\trequest: function(config){\r\n\t\t\t\t\t\tvar token = SessionToken.get();\r\n\t\t\t\t\t\tif (token && config.url.indexOf(API_BASE) > -1) {\r\n\t\t\t\t\t\t\tconfig.headers['Authorization'] = token;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn config;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}]);\r\n\tangular.module('profconn')\r\n\t\t.config(['$httpProvider', function($httpProvider) {\r\n\t\t\treturn $httpProvider.interceptors.push('AuthInterceptor');\r\n\t\t}]);\r\n})();","(function(){\r\n\tangular.module('profconn')\r\n\t\t.service('CurrentUser', ['$window', function($window){\r\n\t\t\tfunction CurrentUser(){\r\n\t\t\t\tvar currUser = $window.localStorage.getItem('currentUser');\r\n\t\t\t\t// if(currUser){\r\n\t\t\t\t// \tconsole.log(\"true\");\r\n\t\t\t\t// }else{\r\n\t\t\t\t// \tconsole.log(\"false\")\r\n\t\t\t\t// };\r\n\t\t\t\tif (currUser && currUser !==  \"undefined\") {\r\n\t\t\t\t\tconsole.log(\"annoying\");\r\n\t\t\t\t\tthis.currentUser= JSON.parse($window.localStorage.getItem('currentUser'));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tCurrentUser.prototype.set = function(user){\r\n\t\t\t\tthis.currentUser = user;\r\n\t\t\t\t$window.localStorage.setItem('currentUser', JSON.stringify(user));\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.get = function(){\r\n\t\t\t\t// console.log(this.currentUser);\r\n\t\t\t\treturn this.currentUser || false;\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.clear = function(){\r\n\t\t\t\tthis.currentUser = undefined;\r\n\t\t\t\t$window.localStorage.removeItem('currentUser');\r\n\t\t\t};\r\n\t\t\tCurrentUser.prototype.isSignedIn = function(){\r\n\t\t\t\treturn !!this.get();\r\n\t\t\t};\r\n\t\t\treturn new CurrentUser();\r\n\t\t}]);\r\n})();","(function(){\r\n\tangular.module('profconn')\r\n\t\t.service('ProfileService', ProfileService);\r\n\r\n\t\tProfileService.$inject = ['$http', 'API_BASE'];\r\n\t\tfunction ProfileService($http, API_BASE){\r\n\t\t\tvar profileService = this;\r\n\t\t\tprofileService.currentProfile = [];\r\n\r\n\t\t\tprofileService.save = function(updates){\r\n\t\t\t\treturn $http.post(API_BASE, 'update', {\r\n\t\t\t\t\t// User update stuff goes here\r\n\t\t\t\t}).then(function(response){\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t};\r\n\r\n\t\t\tprofileService.fetch = function(profile){\r\n\t\t\t\treturn $http.get(API_BASE + 'currentProfile')\r\n\t\t\t\t\t.then(function(response){\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tprofileService.getProfile = function(){\r\n\t\t\t\treturn profileService.currentProfile;\r\n\t\t\t};\r\n\r\n\t\t\tprofileService.update = function(user){\r\n\t\t\t\treturn $http.put(API_BASE + 'currentProfile', {user: user})\r\n\t\t\t\t\t.then(function(response){\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t});\r\n\t\t\t};\r\n\t\t}\r\n})();","(function(){\r\n\tangular.module('profconn')\r\n\t\t.service('SessionToken', ['$window', function($window) {\r\n\t\t\tfunction SessionToken(){\r\n\t\t\t\tthis.sessionToken = $window.localStorage.getItem('sessionToken');\r\n\t\t\t}\r\n\t\t\tSessionToken.prototype.set = function(token) {\r\n\t\t\t\tthis.sessionToken = token;\r\n\t\t\t\t$window.localStorage.setItem('sessionToken', token);\r\n\t\t\t};\r\n\t\t\tSessionToken.prototype.get = function(){\r\n\t\t\t\treturn this.sessionToken;\r\n\t\t\t};\r\n\t\t\tSessionToken.prototype.clear = function(){\r\n\t\t\t\tthis.sessionToken = undefined;\r\n\t\t\t\t$window.localStorage.removeItem('sessionToken');\r\n\t\t\t};\r\n\t\t\treturn new SessionToken();\r\n\t\t}]);\r\n})();","(function(){\r\n\tangular.module('profconn')\r\n\t\t.service('UsermapService', UsermapService);\r\n\r\n\t\tUsermapService.$inject = ['$http', 'API_BASE'];\r\n\t\tfunction UsermapService($http, API_BASE){\r\n\t\t\tvar usermapService = this;\r\n\r\n\t\t\tusermapService.fetchAll = function(){\r\n\t\t\t\treturn $http.get(API_BASE + 'profiles')\r\n\t\t\t\t\t.then(function(response){\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n})();","(function(){\r\n\tangular.module('profconn')\r\n\t\t.service('UsersService', [\r\n\t\t\t'$http', 'API_BASE', 'SessionToken', 'CurrentUser',\r\n\t\t\tfunction($http, API_BASE, SessionToken, CurrentUser){\r\n\t\t\t\tfunction UsersService(){\r\n\r\n\t\t\t\t}\r\n\t\t\t\tUsersService.prototype.create = function(user) {\r\n\t\t\t\t\tvar userPromise = $http.post(API_BASE + 'signup', {\r\n\t\t\t\t\t\tusername: user.username,\r\n\t\t\t\t\t\temail: user.email,\r\n\t\t\t\t\t\tpassword: user.password\r\n\t\t\t\t\t});\r\n\t\t\t\t\tuserPromise.then(function(response) {\r\n\t\t\t\t\t\tSessionToken.set(response.data.token);\r\n\t\t\t\t\t\tCurrentUser.set(response.data.id);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn userPromise;\r\n\t\t\t\t};\r\n\t\t\t\tUsersService.prototype.login = function(user){\r\n\t\t\t\t\tvar loginPromise = $http.post(API_BASE +'signin', {\r\n\t\t\t\t\t\temail: user.email,\r\n\t\t\t\t\t\tpassword: user.password\r\n\t\t\t\t\t});\r\n\t\t\t\t\tloginPromise.then(function(response){\r\n\t\t\t\t\t\tSessionToken.set(response.data.token);\r\n\t\t\t\t\t\tCurrentUser.set(response.data.id)\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn loginPromise;\r\n\t\t\t\t};\r\n\t\t\t\treturn new UsersService();\r\n\t\t\t}]);\r\n})();"]}